{"ast":null,"code":"var _jsxFileName = \"D:\\\\medicine\\\\frontend\\\\src\\\\booking\\\\ListElem.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Row, Col, Container, Card, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst date = [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"];\nconst ListElem = props => {\n  const localDate = new Date(props.booking.date);\n  return /*#__PURE__*/_jsxDEV(Col, {\n    xs: 3,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: props.booking.serviceName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: props.booking.doctorName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: localDate.getDay() + ' ' + date[localDate.getMonth()] + ', ' + localDate.getFullYear() + ' ' + localDate.getHours() + ':' + (localDate.getMinutes() < 10 ? '' : null) + localDate.getMinutes()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: props.booking.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: \"Go somewhere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = ListElem;\nexport default ListElem;\nvar _c;\n$RefreshReg$(_c, \"ListElem\");","map":{"version":3,"names":["React","useEffect","useState","Row","Col","Container","Card","Button","jsxDEV","_jsxDEV","date","ListElem","props","localDate","Date","booking","xs","children","className","Body","Title","serviceName","fileName","_jsxFileName","lineNumber","columnNumber","Text","doctorName","getDay","getMonth","getFullYear","getHours","getMinutes","price","variant","_c","$RefreshReg$"],"sources":["D:/medicine/frontend/src/booking/ListElem.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Container, Card, Button } from \"react-bootstrap\";\r\n\r\nconst date = [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"]\r\n\r\nconst ListElem = (props) => {\r\n    const localDate = new Date(props.booking.date);\r\n    return (\r\n        <Col xs = {3}>\r\n        <Card className = \"mb-4\">\r\n            <Card.Body>\r\n                <Card.Title>{props.booking.serviceName}</Card.Title>\r\n                <Card.Text>{props.booking.doctorName}</Card.Text>\r\n                {/* <Card.Text>{props.booking.date.replace('T', ' ').substr(0, 16)}</Card.Text> */}\r\n                <Card.Text>{localDate.getDay() + ' ' + date[localDate.getMonth()] + ', ' + localDate.getFullYear() + ' ' + localDate.getHours() + ':' + (localDate.getMinutes() < 10 ? '' : null) + localDate.getMinutes()}</Card.Text>\r\n                <Card.Text>{props.booking.price}</Card.Text>\r\n                <Button variant=\"primary\">Go somewhere</Button>\r\n            </Card.Body>\r\n        </Card>\r\n        </Col>\r\n    )\r\n\r\n}\r\n\r\nexport default ListElem;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,IAAI,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC;AAEnI,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EACxB,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACF,KAAK,CAACG,OAAO,CAACL,IAAI,CAAC;EAC9C,oBACID,OAAA,CAACL,GAAG;IAACY,EAAE,EAAI,CAAE;IAAAC,QAAA,eACbR,OAAA,CAACH,IAAI;MAACY,SAAS,EAAG,MAAM;MAAAD,QAAA,eACpBR,OAAA,CAACH,IAAI,CAACa,IAAI;QAAAF,QAAA,gBACNR,OAAA,CAACH,IAAI,CAACc,KAAK;UAAAH,QAAA,EAAEL,KAAK,CAACG,OAAO,CAACM;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACpDhB,OAAA,CAACH,IAAI,CAACoB,IAAI;UAAAT,QAAA,EAAEL,KAAK,CAACG,OAAO,CAACY;QAAU;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAEjDhB,OAAA,CAACH,IAAI,CAACoB,IAAI;UAAAT,QAAA,EAAEJ,SAAS,CAACe,MAAM,CAAC,CAAC,GAAG,GAAG,GAAGlB,IAAI,CAACG,SAAS,CAACgB,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,GAAGhB,SAAS,CAACiB,WAAW,CAAC,CAAC,GAAG,GAAG,GAAGjB,SAAS,CAACkB,QAAQ,CAAC,CAAC,GAAG,GAAG,IAAIlB,SAAS,CAACmB,UAAU,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAGnB,SAAS,CAACmB,UAAU,CAAC;QAAC;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACvNhB,OAAA,CAACH,IAAI,CAACoB,IAAI;UAAAT,QAAA,EAAEL,KAAK,CAACG,OAAO,CAACkB;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC5ChB,OAAA,CAACF,MAAM;UAAC2B,OAAO,EAAC,SAAS;UAAAjB,QAAA,EAAC;QAAY;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAGd,CAAC;AAAAU,EAAA,GAjBKxB,QAAQ;AAmBd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}