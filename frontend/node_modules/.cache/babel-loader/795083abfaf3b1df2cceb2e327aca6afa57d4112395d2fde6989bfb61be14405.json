{"ast":null,"code":"import React from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nconst isTokenExpired = () => {\n  try {\n    const token = localStorage.getItem(token);\n    const decoded = jwtDecode(token);\n    return decoded.exp < Math.floor(Date.now / 1000);\n  } catch (error) {\n    console.error('Invalid token:', error);\n    return true;\n  }\n};\nexport default isTokenExpired;","map":{"version":3,"names":["React","jwtDecode","isTokenExpired","token","localStorage","getItem","decoded","exp","Math","floor","Date","now","error","console"],"sources":["D:/medicine/frontend/src/isTokenExpired.js"],"sourcesContent":["import React from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\"\r\n\r\nconst isTokenExpired = () => {\r\n    try {\r\n        const token = localStorage.getItem(token);\r\n        const decoded = jwtDecode(token);\r\n        return decoded.exp < Math.floor(Date.now / 1000);\r\n    } catch (error) {\r\n        console.error('Invalid token:', error);\r\n        return true;\r\n    }\r\n}\r\n\r\nexport default isTokenExpired;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB,IAAI;IACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACF,KAAK,CAAC;IACzC,MAAMG,OAAO,GAAGL,SAAS,CAACE,KAAK,CAAC;IAChC,OAAOG,OAAO,CAACC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,GAAG,IAAI,CAAC;EACpD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACtC,OAAO,IAAI;EACf;AACJ,CAAC;AAED,eAAeV,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}