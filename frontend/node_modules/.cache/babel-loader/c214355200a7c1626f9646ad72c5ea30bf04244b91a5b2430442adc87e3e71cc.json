{"ast":null,"code":"var _excluded = [\"type\", \"autoComplete\", \"smartCaret\", \"metadata\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport PhoneInput_ from './PhoneInput.js';\nimport InputSmart from './InputSmart.js';\nimport InputBasic from './InputBasic.js';\nexport function createInput(defaultMetadata) {\n  function PhoneInput(_ref, ref) {\n    var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'tel' : _ref$type,\n      _ref$autoComplete = _ref.autoComplete,\n      autoComplete = _ref$autoComplete === void 0 ? 'tel' : _ref$autoComplete,\n      _ref$smartCaret = _ref.smartCaret,\n      smartCaret = _ref$smartCaret === void 0 ? true : _ref$smartCaret,\n      _ref$metadata = _ref.metadata,\n      metadata = _ref$metadata === void 0 ? defaultMetadata : _ref$metadata,\n      rest = _objectWithoutProperties(_ref, _excluded);\n    return /*#__PURE__*/React.createElement(PhoneInput_, _extends({}, rest, {\n      type: type,\n      autoComplete: autoComplete,\n      metadata: metadata,\n      ref: ref,\n      Component: smartCaret ? InputSmart : InputBasic\n    }));\n  }\n  PhoneInput = /*#__PURE__*/React.forwardRef(PhoneInput);\n  PhoneInput.propTypes = {\n    /**\r\n     * HTML `<input/>` `type` attribute.\r\n     */\n    type: PropTypes.string,\n    /**\r\n     * HTML `<input/>` `autocomplete` attribute.\r\n     */\n    autoComplete: PropTypes.string,\n    /**\r\n     * By default, the caret position is being \"intelligently\" managed\r\n     * while a user inputs a phone number.\r\n     * This \"smart\" caret behavior can be turned off\r\n     * by passing `smartCaret={false}` property.\r\n     * This is just an \"escape hatch\" for any possible caret position issues.\r\n     */\n    // Is `true` by default.\n    smartCaret: PropTypes.bool,\n    /**\r\n     * `libphonenumber-js` metadata.\r\n     */\n    metadata: PropTypes.object\n  };\n  return PhoneInput;\n}\nexport default createInput();","map":{"version":3,"names":["React","PropTypes","PhoneInput_","InputSmart","InputBasic","createInput","defaultMetadata","PhoneInput","_ref","ref","_ref$type","type","_ref$autoComplete","autoComplete","_ref$smartCaret","smartCaret","_ref$metadata","metadata","rest","_objectWithoutProperties","_excluded","createElement","_extends","Component","forwardRef","propTypes","string","bool","object"],"sources":["D:\\medicine\\frontend\\node_modules\\react-phone-number-input\\source\\PhoneInputBrowser.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport PhoneInput_ from './PhoneInput.js'\r\nimport InputSmart from './InputSmart.js'\r\nimport InputBasic from './InputBasic.js'\r\n\r\nexport function createInput(defaultMetadata) {\r\n\tfunction PhoneInput({\r\n\t\t// `<input type=\"tel\"/>`.\r\n\t\ttype = 'tel',\r\n\t\t// Remember (and autofill) the value as a phone number.\r\n\t\tautoComplete = 'tel',\r\n\t\tsmartCaret = true,\r\n\t\tmetadata = defaultMetadata,\r\n\t\t...rest\r\n\t}, ref) {\r\n\t\treturn (\r\n\t\t\t<PhoneInput_\r\n\t\t\t\t{...rest}\r\n\t\t\t\ttype={type}\r\n\t\t\t\tautoComplete={autoComplete}\r\n\t\t\t\tmetadata={metadata}\r\n\t\t\t\tref={ref}\r\n\t\t\t\tComponent={smartCaret ? InputSmart : InputBasic}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n\r\n\tPhoneInput = React.forwardRef(PhoneInput)\r\n\r\n\tPhoneInput.propTypes = {\r\n\t\t/**\r\n\t\t * HTML `<input/>` `type` attribute.\r\n\t\t */\r\n\t\ttype: PropTypes.string,\r\n\r\n\t\t/**\r\n\t\t * HTML `<input/>` `autocomplete` attribute.\r\n\t\t */\r\n\t\tautoComplete: PropTypes.string,\r\n\r\n\t\t/**\r\n\t\t * By default, the caret position is being \"intelligently\" managed\r\n\t\t * while a user inputs a phone number.\r\n\t\t * This \"smart\" caret behavior can be turned off\r\n\t\t * by passing `smartCaret={false}` property.\r\n\t\t * This is just an \"escape hatch\" for any possible caret position issues.\r\n\t\t */\r\n\t\t// Is `true` by default.\r\n\t\tsmartCaret: PropTypes.bool,\r\n\r\n\t\t/**\r\n\t\t * `libphonenumber-js` metadata.\r\n\t\t */\r\n\t\tmetadata: PropTypes.object\r\n\t}\r\n\r\n\treturn PhoneInput\r\n}\r\n\r\nexport default createInput()"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAOC,WAAW,MAAM,iBAAiB;AACzC,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,UAAU,MAAM,iBAAiB;AAExC,OAAO,SAASC,WAAWA,CAACC,eAAe,EAAE;EAC5C,SAASC,UAAUA,CAAAC,IAAA,EAQhBC,GAAG,EAAE;IAAA,IAAAC,SAAA,GAAAF,IAAA,CANPG,IAAI;MAAJA,IAAI,GAAAD,SAAA,cAAG,KAAK,GAAAA,SAAA;MAAAE,iBAAA,GAAAJ,IAAA,CAEZK,YAAY;MAAZA,YAAY,GAAAD,iBAAA,cAAG,KAAK,GAAAA,iBAAA;MAAAE,eAAA,GAAAN,IAAA,CACpBO,UAAU;MAAVA,UAAU,GAAAD,eAAA,cAAG,IAAI,GAAAA,eAAA;MAAAE,aAAA,GAAAR,IAAA,CACjBS,QAAQ;MAARA,QAAQ,GAAAD,aAAA,cAAGV,eAAe,GAAAU,aAAA;MACvBE,IAAI,GAAAC,wBAAA,CAAAX,IAAA,EAAAY,SAAA;IAEP,oBACCpB,KAAA,CAAAqB,aAAA,CAACnB,WAAW,EAAAoB,QAAA,KACPJ,IAAI;MACRP,IAAI,EAAEA,IAAK;MACXE,YAAY,EAAEA,YAAa;MAC3BI,QAAQ,EAAEA,QAAS;MACnBR,GAAG,EAAEA,GAAI;MACTc,SAAS,EAAER,UAAU,GAAGZ,UAAU,GAAGC;IAAW,EAChD,CAAC;EAEJ;EAEAG,UAAU,gBAAGP,KAAK,CAACwB,UAAU,CAACjB,UAAU,CAAC;EAEzCA,UAAU,CAACkB,SAAS,GAAG;IACtB;AACF;AACA;IACEd,IAAI,EAAEV,SAAS,CAACyB,MAAM;IAEtB;AACF;AACA;IACEb,YAAY,EAAEZ,SAAS,CAACyB,MAAM;IAE9B;AACF;AACA;AACA;AACA;AACA;AACA;IACE;IACAX,UAAU,EAAEd,SAAS,CAAC0B,IAAI;IAE1B;AACF;AACA;IACEV,QAAQ,EAAEhB,SAAS,CAAC2B;EACrB,CAAC;EAED,OAAOrB,UAAU;AAClB;AAEA,eAAeF,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}