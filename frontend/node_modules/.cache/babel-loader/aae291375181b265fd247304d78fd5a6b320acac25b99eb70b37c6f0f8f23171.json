{"ast":null,"code":"var _jsxFileName = \"D:\\\\medicine\\\\frontend\\\\src\\\\booking\\\\PickDateTime.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport apiClient from \"../apiClient\";\nimport NavHeader from \"../header/NavHeader\";\nimport ServiceElem from \"./ServiceElem\";\nimport DoctorsElem from \"./DoctorsElem\";\nimport DateTimeElem from \"./DateTimeElem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PickDateTime = props => {\n  _s();\n  const [dates, setDates] = useState([]);\n  const [datesArray, setDatesArray] = useState([]);\n  const allDates = [\"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\"];\n  const makeRow = (array, size) => {\n    const result = [];\n    for (let i = 0; i < array.length; i += size) {\n      result.push(array.slice(i, i + size));\n    }\n    return result;\n  };\n  useEffect(() => {\n    const fetchGet = async () => {\n      const response = await apiClient.get(`/api/v1/doctor/bookings?doctorId=${sessionStorage.getItem(\"doctorId\")}`);\n    };\n    fetchGet();\n  }, []);\n  useEffect(() => {\n    setDates(datas.map(elem => new Date(elem)));\n    if (dates.length > 0) {\n      setDatesArray(makeRow(allDates, 4));\n    }\n  }, [dates]);\n  console.log(dates);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"xl my-3\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435 \\u0443\\u0441\\u043B\\u0443\\u0433\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-4\",\n      children: datesArray.map((elem, index) => {\n        return /*#__PURE__*/_jsxDEV(Row, {\n          children: elem.map((col, index) => /*#__PURE__*/_jsxDEV(DateTimeElem, {\n            func: props.func,\n            date: col\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 51\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(PickDateTime, \"aAjtIcpP+/+gxb1uasUw3Ct5u7U=\");\n_c = PickDateTime;\nexport default PickDateTime;\nvar _c;\n$RefreshReg$(_c, \"PickDateTime\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","apiClient","NavHeader","ServiceElem","DoctorsElem","DateTimeElem","jsxDEV","_jsxDEV","Fragment","_Fragment","PickDateTime","props","_s","dates","setDates","datesArray","setDatesArray","allDates","makeRow","array","size","result","i","length","push","slice","fetchGet","response","get","sessionStorage","getItem","datas","map","elem","Date","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","index","col","func","date","_c","$RefreshReg$"],"sources":["D:/medicine/frontend/src/booking/PickDateTime.js"],"sourcesContent":["import React, { useState, useEffect }  from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport apiClient from \"../apiClient\";\r\nimport NavHeader from \"../header/NavHeader\";\r\nimport ServiceElem from \"./ServiceElem\";\r\nimport DoctorsElem from \"./DoctorsElem\";\r\nimport DateTimeElem from \"./DateTimeElem\";\r\n\r\n\r\n\r\nconst PickDateTime = (props) => {\r\n\r\n        const [dates, setDates] = useState([]);\r\n        const [datesArray, setDatesArray] = useState([]);\r\n\r\n        const allDates = [\"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\"];\r\n\r\n        const makeRow = (array, size) => {\r\n            const result = [];\r\n            for (let i = 0; i < array.length; i += size) {\r\n                result.push(array.slice(i, i + size));\r\n            }\r\n            return result\r\n        }\r\n\r\n    useEffect(() => {\r\n        const fetchGet = async () => {\r\n            const response = await apiClient.get(`/api/v1/doctor/bookings?doctorId=${sessionStorage.getItem(\"doctorId\")}`);\r\n        }\r\n\r\n        fetchGet();\r\n    }, []);    \r\n\r\n    useEffect(() => {\r\n        setDates(datas.map(elem => new Date(elem)));\r\n        if (dates.length > 0) {\r\n            setDatesArray(makeRow(allDates, 4));\r\n        }\r\n    }, [dates]);\r\n\r\n    console.log(dates);\r\n\r\n    return (\r\n        <>\r\n        <Container className=\"xl my-3\"><h1>Доступные услуги:</h1></Container>\r\n        <Container className=\"mt-4\">\r\n            {datesArray.map(\r\n                (elem, index) => {\r\n                return <Row key = {index}>\r\n                        {elem.map((col, index) => <DateTimeElem func = {props.func} key = {index} date = {col}/>)}\r\n                    </Row>\r\n                }\r\n                )\r\n            }\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PickDateTime;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}