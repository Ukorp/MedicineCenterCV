{"ast":null,"code":"var _jsxFileName = \"D:\\\\medicine\\\\frontend\\\\src\\\\HelloPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport LogoutButton from \"./LogoutButton\";\nimport apiClient from \"./apiClient\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HelloPage = props => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await apiClient.get(\"/api/v1/user/info\");\n        setUser(response.data);\n      } catch {\n        console.error(\"Ошибка при получении данных пользователя\");\n      }\n    };\n    fetchUserData();\n  });\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u041D\\u0430\\u0447\\u0430\\u043B\\u043E \\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\u0443 \\u043F\\u043E\\u043B\\u043E\\u0436\\u0435\\u043D\\u043E, \", user.firstName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(HelloPage, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = HelloPage;\nexport default HelloPage;\nvar _c;\n$RefreshReg$(_c, \"HelloPage\");","map":{"version":3,"names":["React","useEffect","useState","LogoutButton","apiClient","jsxDEV","_jsxDEV","Fragment","_Fragment","HelloPage","props","_s","user","setUser","fetchUserData","response","get","data","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","firstName","_c","$RefreshReg$"],"sources":["D:/medicine/frontend/src/HelloPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport LogoutButton from \"./LogoutButton\";\r\nimport apiClient from \"./apiClient\";\r\n\r\nconst HelloPage = (props) => {\r\n\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchUserData = async () => {\r\n            try {\r\n                const response = await apiClient.get(\"/api/v1/user/info\");\r\n                setUser(response.data);\r\n            }\r\n            catch {\r\n                console.error(\"Ошибка при получении данных пользователя\");\r\n            }\r\n        }\r\n\r\n        fetchUserData();\r\n    });\r\n\r\n    if (!user) {\r\n        return (<h1>Загрузка...</h1>);\r\n    }\r\n\r\n    return (<>\r\n            <h1>Начало курсачу положено, {user.firstName}!</h1>\r\n            <LogoutButton/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HelloPage"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMX,SAAS,CAACY,GAAG,CAAC,mBAAmB,CAAC;QACzDH,OAAO,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC1B,CAAC,CACD,MAAM;QACFC,OAAO,CAACC,KAAK,CAAC,0CAA0C,CAAC;MAC7D;IACJ,CAAC;IAEDL,aAAa,CAAC,CAAC;EACnB,CAAC,CAAC;EAEF,IAAI,CAACF,IAAI,EAAE;IACP,oBAAQN,OAAA;MAAAc,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAChC;EAEA,oBAAQlB,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACAd,OAAA;MAAAc,QAAA,GAAI,oIAAyB,EAACR,IAAI,CAACa,SAAS,EAAC,GAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnDlB,OAAA,CAACH,YAAY;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACjB,CAAC;AAEX,CAAC;AAAAb,EAAA,CA3BKF,SAAS;AAAAiB,EAAA,GAATjB,SAAS;AA6Bf,eAAeA,SAAS;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}