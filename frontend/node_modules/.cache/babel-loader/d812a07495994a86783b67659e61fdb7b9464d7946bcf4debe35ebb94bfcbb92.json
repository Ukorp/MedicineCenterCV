{"ast":null,"code":"var _jsxFileName = \"D:\\\\medicine\\\\frontend\\\\src\\\\booking\\\\PickDateTime.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Pagination, Row } from \"react-bootstrap\";\nimport apiClient from \"../apiClient\";\nimport NavHeader from \"../header/NavHeader\";\nimport ServiceElem from \"./ServiceElem\";\nimport DoctorsElem from \"./DoctorsElem\";\nimport DateTimeElem from \"./DateTimeElem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PickDateTime = props => {\n  _s();\n  const [dates, setDates] = useState([]);\n  const [datesArray, setDatesArray] = useState([]);\n  const [currentNumber, setCurrentNumber] = useState(0);\n  let allDates = [\"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"17:30\", \"18:00\", \"19:00\"];\n  allDates = allDates.map(elem => {\n    const newDate = new Date();\n    const hm = elem.split(\":\");\n    newDate.setHours(+hm[0]);\n    newDate.setMinutes(+hm[1]);\n    newDate.setSeconds(0);\n    return newDate;\n  });\n  const makeRow = (array, size) => {\n    const result = [];\n    for (let i = 0; i < array.length; i += size) {\n      result.push(array.slice(i, i + size));\n    }\n    return result;\n  };\n  useEffect(() => {\n    const fetchGet = async () => {\n      const response = await apiClient.get(`/api/v1/doctor/bookings?doctorId=${sessionStorage.getItem(\"doctorId\")}`);\n      setDates(response.data.map(elem => new Date(elem)));\n    };\n    fetchGet();\n  }, []);\n  useEffect(() => {\n    if (dates.length > 0) {\n      setDatesArray(makeRow(allDates, 4));\n    }\n  }, [dates]);\n  const setDateForAll = date => {\n    console.log(allDates);\n    allDates = allDates.map(elem => elem.setDate(elem.getDate() + date - currentNumber));\n    setCurrentNumber(date);\n    console.log(allDates);\n  };\n  let items = [];\n  let currentDate = new Date();\n  const constDate = new Date();\n  for (let number = 0; number <= 25; ++number) {\n    items.push(/*#__PURE__*/_jsxDEV(Pagination.Item, {\n      onClick: () => setDateForAll(number),\n      active: number === currentNumber,\n      children: currentDate.getDate()\n    }, number, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this));\n    currentDate.setDate(currentDate.getDate() + 1);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"xl my-3\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435 \\u0443\\u0441\\u043B\\u0443\\u0433\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        size: \"bg\",\n        children: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-4\",\n      children: datesArray.map((elem, index) => {\n        return /*#__PURE__*/_jsxDEV(Row, {\n          children: elem.map((col, index) => /*#__PURE__*/_jsxDEV(DateTimeElem, {\n            func: props.func,\n            date: col\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 51\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(PickDateTime, \"VseEZJxC139Iw/0Lku49dxRz4A4=\");\n_c = PickDateTime;\nexport default PickDateTime;\nvar _c;\n$RefreshReg$(_c, \"PickDateTime\");","map":{"version":3,"names":["React","useState","useEffect","Container","Pagination","Row","apiClient","NavHeader","ServiceElem","DoctorsElem","DateTimeElem","jsxDEV","_jsxDEV","Fragment","_Fragment","PickDateTime","props","_s","dates","setDates","datesArray","setDatesArray","currentNumber","setCurrentNumber","allDates","map","elem","newDate","Date","hm","split","setHours","setMinutes","setSeconds","makeRow","array","size","result","i","length","push","slice","fetchGet","response","get","sessionStorage","getItem","data","setDateForAll","date","console","log","setDate","getDate","items","currentDate","constDate","number","Item","onClick","active","children","fileName","_jsxFileName","lineNumber","columnNumber","className","index","col","func","_c","$RefreshReg$"],"sources":["D:/medicine/frontend/src/booking/PickDateTime.js"],"sourcesContent":["import React, { useState, useEffect }  from \"react\";\r\nimport { Container, Pagination, Row } from \"react-bootstrap\";\r\nimport apiClient from \"../apiClient\";\r\nimport NavHeader from \"../header/NavHeader\";\r\nimport ServiceElem from \"./ServiceElem\";\r\nimport DoctorsElem from \"./DoctorsElem\";\r\nimport DateTimeElem from \"./DateTimeElem\";\r\n\r\n\r\nconst PickDateTime = (props) => {\r\n\r\n        const [dates, setDates] = useState([]);\r\n        const [datesArray, setDatesArray] = useState([]);\r\n        const [currentNumber, setCurrentNumber] = useState(0);\r\n        let allDates = [\"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"17:30\" , \"18:00\", \"19:00\"];\r\n        allDates = allDates.map(elem => {\r\n                const newDate = new Date();\r\n                const hm = elem.split(\":\")\r\n                newDate.setHours(+hm[0]);\r\n                newDate.setMinutes(+hm[1]);\r\n                newDate.setSeconds(0);\r\n                return newDate;\r\n            });\r\n\r\n        const makeRow = (array, size) => {\r\n            const result = [];\r\n            for (let i = 0; i < array.length; i += size) {\r\n                result.push(array.slice(i, i + size));\r\n            }\r\n            return result\r\n        }\r\n\r\n    useEffect(() => {\r\n        const fetchGet = async () => {\r\n            const response = await apiClient.get(`/api/v1/doctor/bookings?doctorId=${sessionStorage.getItem(\"doctorId\")}`);\r\n            setDates(response.data.map(elem => new Date(elem)));\r\n        }\r\n\r\n        fetchGet();\r\n    }, []);    \r\n\r\n    useEffect(() => {\r\n        if (dates.length > 0) {\r\n            setDatesArray(makeRow(allDates, 4));\r\n        }\r\n    }, [dates]);\r\n\r\n    const setDateForAll = (date) => {\r\n        console.log(allDates)\r\n        allDates = allDates.map(elem => elem.setDate(elem.getDate() + date - currentNumber));\r\n        setCurrentNumber(date);\r\n        console.log(allDates);\r\n    }\r\n\r\n    let items = [];\r\n    let currentDate = new Date();\r\n    const constDate = new Date();\r\n\r\n    for (let number = 0; number <= 25; ++number) {\r\n        items.push(\r\n            <Pagination.Item key={number} onClick={() => setDateForAll(number)} active={number === currentNumber}>\r\n            {currentDate.getDate()}\r\n            </Pagination.Item>);\r\n        currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n\r\n    return (\r\n        <>        \r\n        <Container className=\"xl my-3\"><h1>Доступные услуги:</h1></Container>\r\n        <Container><Pagination size=\"bg\" >{items}</Pagination></Container>\r\n        <Container className=\"mt-4\">\r\n            {datesArray.map(\r\n                (elem, index) => {\r\n                return <Row key = {index}>\r\n                        {elem.map((col, index) => <DateTimeElem func = {props.func} key = {index} date = {col}/>)}\r\n                    </Row>\r\n                }\r\n                )\r\n            }\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PickDateTime;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}