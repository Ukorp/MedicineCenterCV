{"ast":null,"code":"var _jsxFileName = \"D:\\\\medicine\\\\frontend\\\\src\\\\HelloPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport LogoutButton from \"./LogoutButton\";\nimport apiClient from \"./apiClient\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HelloPage = props => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const response = await apiClient.get('/api/user/info');\n        setUserInfo(response); // Сохраняем данные в состояние\n      } catch (err) {\n        setError('Не удалось загрузить данные');\n        console.error(err); // Логируем ошибку\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u041D\\u0430\\u0447\\u0430\\u043B\\u043E \\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\u0443 \\u043F\\u043E\\u043B\\u043E\\u0436\\u0435\\u043D\\u043E, $\", user === null ? \"Загрузка...\" : user.firstName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(HelloPage, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = HelloPage;\nexport default HelloPage;\nvar _c;\n$RefreshReg$(_c, \"HelloPage\");","map":{"version":3,"names":["React","useEffect","useState","LogoutButton","apiClient","jsxDEV","_jsxDEV","Fragment","_Fragment","HelloPage","props","_s","user","setUser","fetch","response","get","setUserInfo","err","setError","console","error","setLoading","children","firstName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/medicine/frontend/src/HelloPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport LogoutButton from \"./LogoutButton\";\r\nimport apiClient from \"./apiClient\";\r\n\r\nconst HelloPage = (props) => {\r\n    \r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            try {\r\n                const response = await apiClient.get('/api/user/info');\r\n                setUserInfo(response); // Сохраняем данные в состояние\r\n              } catch (err) {\r\n                setError('Не удалось загрузить данные');\r\n                console.error(err); // Логируем ошибку\r\n              } finally {\r\n                setLoading(false);\r\n              }\r\n        };\r\n        fetch();\r\n    }, []);\r\n\r\n\r\n    return (<>\r\n            <h1>Начало курсачу положено, ${user === null ? \"Загрузка...\" : user.firstName}!</h1>\r\n            <LogoutButton/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HelloPage"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMa,KAAK,GAAG,MAAAA,CAAA,KAAY;MACtB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMX,SAAS,CAACY,GAAG,CAAC,gBAAgB,CAAC;QACtDC,WAAW,CAACF,QAAQ,CAAC,CAAC,CAAC;MACzB,CAAC,CAAC,OAAOG,GAAG,EAAE;QACZC,QAAQ,CAAC,6BAA6B,CAAC;QACvCC,OAAO,CAACC,KAAK,CAACH,GAAG,CAAC,CAAC,CAAC;MACtB,CAAC,SAAS;QACRI,UAAU,CAAC,KAAK,CAAC;MACnB;IACN,CAAC;IACDR,KAAK,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAGN,oBAAQR,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACAjB,OAAA;MAAAiB,QAAA,GAAI,qIAA0B,EAACX,IAAI,KAAK,IAAI,GAAG,aAAa,GAAGA,IAAI,CAACY,SAAS,EAAC,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpFtB,OAAA,CAACH,YAAY;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACjB,CAAC;AAEX,CAAC;AAAAjB,EAAA,CAzBKF,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AA2Bf,eAAeA,SAAS;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}