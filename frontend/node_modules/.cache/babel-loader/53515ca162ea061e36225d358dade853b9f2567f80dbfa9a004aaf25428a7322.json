{"ast":null,"code":"var _jsxFileName = \"D:\\\\medicine\\\\frontend\\\\src\\\\booking\\\\Archive.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport ListElem from \"./ListElem\";\nimport apiClient from \"../apiClient\";\nimport NavHeader from \"../header/NavHeader\";\nimport { array } from \"prop-types\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Archive = props => {\n  _s();\n  const [bookings, setBookings] = useState([]);\n  const [user, setUser] = useState(null);\n  const [bookingArray, setBookingArray] = useState(bookings);\n  useEffect(() => {\n    const fetchGet = async () => {\n      const response = await apiClient.get(\"api/v1/booking/archive\");\n      setBookings(response.data);\n    };\n    const makeRow = (array, size) => {\n      const result = [];\n      for (let i = 0; i < array.length; i += size) {\n        result.push(array.slice(i, i + size));\n      }\n      return result;\n    };\n    setUser(this.props.user);\n    fetchGet();\n    setBookingArray(makeRow(bookings, 3));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavHeader, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: bookingArray.map(elem => {\n        return /*#__PURE__*/_jsxDEV(Row, {\n          children: elem.map(col => /*#__PURE__*/_jsxDEV(ListElem, {\n            booking: col\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 46\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Archive, \"GeMgYpfBE2oRub7Q8ebi9ivZ3qI=\");\n_c = Archive;\nexport default Archive;\nvar _c;\n$RefreshReg$(_c, \"Archive\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","ListElem","apiClient","NavHeader","array","jsxDEV","_jsxDEV","Fragment","_Fragment","Archive","props","_s","bookings","setBookings","user","setUser","bookingArray","setBookingArray","fetchGet","response","get","data","makeRow","size","result","i","length","push","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","map","elem","col","booking","_c","$RefreshReg$"],"sources":["D:/medicine/frontend/src/booking/Archive.js"],"sourcesContent":["import React, { useState, useEffect }  from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport ListElem from \"./ListElem\";\r\nimport apiClient from \"../apiClient\";\r\nimport NavHeader from \"../header/NavHeader\";\r\nimport { array } from \"prop-types\";\r\n\r\nconst Archive = (props) => {\r\n\r\n        const [bookings, setBookings] = useState([]);\r\n        const [user, setUser] = useState(null);\r\n        const [bookingArray, setBookingArray] = useState(bookings);\r\n\r\n    useEffect(() => {\r\n        const fetchGet = async () => {\r\n            const response = await apiClient.get(\"api/v1/booking/archive\");\r\n            setBookings(response.data)\r\n        }\r\n\r\n\r\n        const makeRow = (array, size) => {\r\n            const result = [];\r\n            for (let i = 0; i < array.length; i += size) {\r\n                result.push(array.slice(i, i + size));\r\n            }\r\n            return result\r\n        }\r\n\r\n        setUser(this.props.user);\r\n\r\n        fetchGet();\r\n\r\n        setBookingArray(makeRow(bookings, 3));\r\n    }, []);    \r\n\r\n    return (\r\n        <>\r\n        <NavHeader user = {user}/>\r\n        <Container>\r\n            {bookingArray.map(\r\n                elem => {\r\n                return <Row>{elem.map(col => <ListElem booking = {col}/>)}</Row>\r\n                }\r\n                )\r\n            }\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Archive;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAS,OAAO;AACnD,SAASC,SAAS,EAAEC,GAAG,QAAQ,iBAAiB;AAChD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,SAASC,KAAK,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAACe,QAAQ,CAAC;EAE9Dd,SAAS,CAAC,MAAM;IACZ,MAAMoB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,MAAMC,QAAQ,GAAG,MAAMjB,SAAS,CAACkB,GAAG,CAAC,wBAAwB,CAAC;MAC9DP,WAAW,CAACM,QAAQ,CAACE,IAAI,CAAC;IAC9B,CAAC;IAGD,MAAMC,OAAO,GAAGA,CAAClB,KAAK,EAAEmB,IAAI,KAAK;MAC7B,MAAMC,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGrB,KAAK,CAACsB,MAAM,EAAED,CAAC,IAAIF,IAAI,EAAE;QACzCC,MAAM,CAACG,IAAI,CAACvB,KAAK,CAACwB,KAAK,CAACH,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAAC,CAAC;MACzC;MACA,OAAOC,MAAM;IACjB,CAAC;IAEDT,OAAO,CAAC,IAAI,CAACL,KAAK,CAACI,IAAI,CAAC;IAExBI,QAAQ,CAAC,CAAC;IAEVD,eAAe,CAACK,OAAO,CAACV,QAAQ,EAAE,CAAC,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACAvB,OAAA,CAACH,SAAS;MAACW,IAAI,EAAIA;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC1B3B,OAAA,CAACP,SAAS;MAAA8B,QAAA,EACLb,YAAY,CAACkB,GAAG,CACbC,IAAI,IAAI;QACR,oBAAO7B,OAAA,CAACN,GAAG;UAAA6B,QAAA,EAAEM,IAAI,CAACD,GAAG,CAACE,GAAG,iBAAI9B,OAAA,CAACL,QAAQ;YAACoC,OAAO,EAAID;UAAI;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAChE,CACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE,CAAC;EAAA,eACV,CAAC;AAEX,CAAC;AAAAtB,EAAA,CAzCKF,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AA2Cb,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}